/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package automatastarter;

import utils.CardSwitcher;
import java.awt.CardLayout;
import javax.swing.JPanel;

/**
 *
 * @author michael.roy-diclemen
 */
public class InfoPanel extends javax.swing.JPanel {
    public static final String CARD_NAME = "info";
    CardSwitcher switcher = null;
    /**
     * Creates new form IntroPanel
     */
    public InfoPanel(CardSwitcher p) {
        initComponents();
        switcher = p;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        introductionTextArea = new javax.swing.JTextArea();

        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        introductionTextArea.setColumns(20);
        introductionTextArea.setRows(5);
        introductionTextArea.setText("Introduction to Brian's Brain Simulation\n\nHistory:\nBrian's Brain was created by Brian Silverman in 1994 as a cellular automaton inspired by Conway's Game of Life. It features three states for each cell: On, Off, and Dying, allowing for unique and dynamic patterns.\n\nRules:\n\nEach cell can be in one of three states: 'On', 'Off', or 'Dying'.\nAn 'On' cell transitions to 'Dying' in the next step.\nA 'Dying' cell becomes 'Off' in the following step.\nAn 'Off' cell becomes 'On' if exactly two of its neighbors are 'On'; otherwise, it remains 'Off'.\nInstructions:\nTo use the application, start by clicking the 'Start' button to begin the simulation. You can toggle cell states by clicking on them with the mouse. Adjust the grid size and simulation speed in the settings menu. Use the 'Pause' button to temporarily halt the simulation and the 'Reset' button to clear the grid.\n\nCommon Patterns:\nSome well-known patterns include:\n\nBlinker: A small oscillating pattern that switches states.\nGlider: A pattern that moves diagonally across the grid over time.\nStill Life: A configuration that remains unchanged after several iterations.");
        jScrollPane2.setViewportView(introductionTextArea);
        introductionTextArea.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(178, 178, 178)
                .addComponent(backButton)
                .addContainerGap(160, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(backButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        switcher.switchToCard(IntroPanel.CARD_NAME);
    }//GEN-LAST:event_backButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JTextArea introductionTextArea;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
